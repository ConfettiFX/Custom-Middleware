/*
* Copyright (c) 2017-2022 The Forge Interactive Inc.
*
* This is a part of Ephemeris.
* This file(code) is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License (https://creativecommons.org/licenses/by-nc/4.0/legalcode) Based on a work at https://github.com/ConfettiFX/The-Forge.
* You can not use this code for commercial purposes.
*
*/

#include "RenderSky.h"

STRUCT(PsIn)
{
	DATA(float4, Position,    SV_Position);
	DATA(float4, Normal,      NORMAL);
  	DATA(float4, Info,        COLOR);
	DATA(float2, ScreenCoord, TEXCOORD0);
};

float4 PS_MAIN(PsIn In)
{	
	INIT_MAIN;

	int2 LoadCoord = int2(In.Position.xy);

	float depth = LoadTex2D(Get(depthTexture), NO_SAMPLER, LoadCoord, 0).x;

	if (depth < 1.0f)
		discard;

	//float4 resultSpaceColor = In.Info.x > 0.5f ?  lerp(Get(NebulaMidColor), Get(NebulaHighColor), (In.Info.x - 0.5f) * 2.0f) : lerp(Get(NebulaLowColor), Get(NebulaMidColor), In.Info.x * 2.0f);

	float3 resultSpaceColor = (Get(NebulaLowColor).rgb  * Get(NebulaLowColor).a  * In.Info.x) 
                            + (Get(NebulaMidColor).rgb  * Get(NebulaLowColor).a  * In.Info.y) 
                            + (Get(NebulaHighColor).rgb * Get(NebulaHighColor).a * In.Info.z);

	float alpha = saturate(saturate(-Get(LightDirection).y + 0.2f) * 2.0f);

	float4 Out = float4(resultSpaceColor.rgb * alpha, alpha);

	RETURN(Out);
}