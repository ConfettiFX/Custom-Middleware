/*
* Copyright (c) 2018-2019 Confetti Interactive Inc.
*
* This is a part of Ephemeris.
* This file(code) is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License (https://creativecommons.org/licenses/by-nc/4.0/legalcode) Based on a work at https://github.com/ConfettiFX/The-Forge.
* You may not use the material for commercial purposes.
*
*/

#version 450 core

#extension GL_EXT_samplerless_texture_functions : enable


struct Data
{
    uint mip;
};
layout(push_constant) uniform RootConstant_Block
{
    uint mip;
}RootConstant;

layout(UPDATE_FREQ_NONE, binding = 0) uniform texture3D SrcTexture;
layout(UPDATE_FREQ_NONE, binding = 1, rgba32f) uniform image3D DstTexture;

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
void HLSLmain(uvec3 GTid, uvec3 Gid)
{
    vec4 result = vec4(0.0, 0.0, 0.0, 0.0);
    int iteration = int (pow(2,int((RootConstant).mip)));
    for (int x = 0; (x < iteration); (x++))
    {
        for (int y = 0; (y < iteration); (y++))
        {
            for (int z = 0; (z < iteration); (z++))
            {
                result += texelFetch(SrcTexture, ivec3(Gid) * iteration + ivec3(x, y, z), 0);
            }
        }
    }
    (result /= vec4 (((iteration * iteration) * iteration)));
    imageStore(DstTexture, ivec3(Gid), result);
}
void main()
{
    uvec3 GTid;
    GTid = gl_LocalInvocationID;
    uvec3 Gid;
    Gid = gl_WorkGroupID;
    HLSLmain(GTid, Gid);
}
