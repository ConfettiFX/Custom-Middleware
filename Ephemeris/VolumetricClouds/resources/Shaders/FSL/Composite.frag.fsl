/*
* Copyright (c) 2017-2024 The Forge Interactive Inc.
*
* This is a part of Ephemeris.
* This file(code) is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License (https://creativecommons.org/licenses/by-nc/4.0/legalcode) Based on a work at https://github.com/ConfettiFX/The-Forge.
* You can not use this code for commercial purposes.
*
*/

#include "VolumetricCloudsCommon.h"

STRUCT(PsIn)
{
	DATA(float4, Position, SV_Position);
	DATA(float2, TexCoord, TEXCOORD0);
	DATA(float2, VSray,    TEXCOORD1);
};

float4 PS_MAIN(PsIn In)
{
	INIT_MAIN;

	float4 volumetricCloudsResult = SampleTex2D(Get(g_PostProcessedTexture), Get(g_LinearClampSampler), In.TexCoord);
	float  atmosphericBlendFactor = SampleLvlTex2D(Get(g_HighResolutionCloudTexture), Get(g_LinearClampSampler), In.TexCoord, 0).g;

	float  sceneLinearDepth = SampleLvlTex2D(Get(depthTexture), Get(g_NearestClampSampler), In.TexCoord, 0).r;
	sceneLinearDepth = lerp(Get(CameraNear), Get(CameraFar), sceneLinearDepth);
	float  cloudDepth = SampleLvlTex2D(Get(g_HighResolutionCloudTexture), Get(g_NearestClampSampler), In.TexCoord, 0).b;
	cloudDepth = UnPackFloat16(cloudDepth);

	RETURN(float4(volumetricCloudsResult.rgb, cloudDepth < sceneLinearDepth ? 1.0f - getAtmosphereBlendForComposite(atmosphericBlendFactor) : 0.0f));
}