/*
* Copyright (c) 2017-2024 The Forge Interactive Inc.
*
* This is a part of Ephemeris.
* This file(code) is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License (https://creativecommons.org/licenses/by-nc/4.0/legalcode) Based on a work at https://github.com/ConfettiFX/The-Forge.
* You can not use this code for commercial purposes.
*
*/

#include "VolumetricCloudsCommon.h"

STRUCT(PsIn)
{
	DATA(float4, Position, SV_Position);
	DATA(float2, TexCoord, TEXCOORD0);
	DATA(float2, VSray,    TEXCOORD1);
};

float4 PS_MAIN(PsIn In)
{
	INIT_MAIN;

	float2 ScreenUV = In.TexCoord;
	ScreenUV.x     += Get(m_CorrectU);
	ScreenUV.y     += Get(m_CorrectV);

	float3 ScreenNDC;
	ScreenNDC.x = ScreenUV.x * 2.0f - 1.0f;
	ScreenNDC.y = (1.0f - ScreenUV.y) * 2.0f - 1.0f;

	float3 projectedPosition = float3(ScreenNDC.xy, 0.0f);
	float4 eyePos = mul(Get(m_DataPerEye)[0].m_ProjToRelativeToEye, float4(projectedPosition, 1.0f));
	float4 CameraPosition = Get(m_DataPerEye)[0].cameraPosition;
	eyePos /= eyePos.w;

	float3 viewDir = normalize(eyePos.xyz);

	float intensity;
	float atmosphereBlendFactor;
	float depth;
	
	float randomSeed = lerp(0.0f, Get(Random00), Get(m_UseRandomSeed));
	float density    = GetDensity(CameraPosition.xyz, viewDir, randomSeed, intensity, atmosphereBlendFactor, depth, In.TexCoord);
		   
	RETURN(float4(intensity, atmosphereBlendFactor, depth, density));
}